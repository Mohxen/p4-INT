//set up switch ID
table_set_default EgressPipeImpl.process_int_transit.tb_int_insert init_metadata 1

//----------------------------------------------------SOURCE

//set up process_int_source_sink (to which ports I am a source node)
table_add IngressPipeImpl.process_int_source_sink.tb_set_source int_set_source 3 => 


//INT activation rules, to set up the INT metadata (IPs and port pairs to monitor)

//port PostGreSQL 5432
table_add IngressPipeImpl.process_int_source.tb_int_source int_source 2001:0001:0001::0001&&&0xFFFFFFFF 2001:0001:0002::0001&&&0xFFFFFFFF 0x00&&&0x00 0x1538&&&0xFFFF => 11 10 0xF 0xF

//port HTTPS 443
table_add IngressPipeImpl.process_int_source.tb_int_source int_source 2001:0001:0001::0001&&&0xFFFFFFFF 2001:0001:0002::0001&&&0xFFFFFFFF 0x00&&&0x00 0x01BB&&&0xFFFF => 11 10 0xF 0xF

//port HTTP 80
table_add IngressPipeImpl.process_int_source.tb_int_source int_source 2001:0001:0001::0001&&&0xFFFFFFFF 2001:0001:0002::0001&&&0xFFFFFFFF 0x00&&&0x00 0x0050&&&0xFFFF => 11 10 0xF 0xF




//----------------------------------------------------SINK

//set up process_int_source_sink (to which ports I am a sink node)
table_add IngressPipeImpl.process_int_source_sink.tb_set_sink int_set_sink 3 => 


//INT metadata report setup

//creates a mirroring ID 100 to output port specified, port 100 always points to the INT collector as defined at network.py
mirroring_add 100 100

//INT report setup towards the INT collector, the key is a dummy values, the arg are values for the report (2 macs, 2 IPs, 1 dst port) the src ones are irrelevant
table_add EgressPipeImpl.process_int_report.tb_generate_report do_report_encapsulation 0 => 00:00:00:00:00:10 00:00:00:00:00:05 2001:1:1::1 2001:1:30::1 1234

